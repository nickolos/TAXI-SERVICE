buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'nick'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

jar {
    baseName = 'spring-reactjs-taxi'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}

dependencies {
    compile(project('taxi-driver-service'))
    compile(project('orders-service'))
    compile(project('payment'))
    compile(project('history'))
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    compile('org.apache.httpcomponents:httpclient:4.5.3')
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-netflix-core', version: '1.0.0.RELEASE'
    compile('org.springframework.boot:spring-boot-starter-logging')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    compile('org.springframework.boot:spring-boot-starter-web')
    compileOnly 'org.projectlombok:lombok'
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.14'
    compile("org.springframework.boot:spring-boot-devtools")
//    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-security')
//    compile(group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.3.RELEASE')
//    compile(group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.8.RELEASE')
}