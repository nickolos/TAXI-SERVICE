buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'nick'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}


dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    compile('org.apache.httpcomponents:httpclient:4.5.3')
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile('org.springframework.boot:spring-boot-starter-web')
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
   // compile group: 'org.springframework.data', name: 'spring-data-mongodb', version: '2.1.4.RELEASE'
   // testCompile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.2.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.13.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    compile("org.springframework.boot:spring-boot-starter-webflux")
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-security')
//    compile(group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.3.RELEASE')
//    compile(group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.8.RELEASE')
}